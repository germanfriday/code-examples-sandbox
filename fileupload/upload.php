<html>	<head><title>Upload</title></head><body><?phprequire("fileupload.class.php");/***** Variables** --------------------------------------------------------------------***/// $path used by save_file() method//// Path to the directory where uploaded files will be saved. MUST end // with a trailing slash unless you use $path = ""; to upload to // current directory. chmod 777 this directory.$path = "uploads/";//$acceptable_file_types used by upload() method//// Limit acceptable uploads based on MIME type. Common MIME types // include: text/plain, image/gif, image/jpeg image/png// To accept ONLY gifs's use the following//acceptable_file_types = "image/gifs";// Accept GIF and JPEG files//$acceptable_file_types = "image/gif|image/jpeg|image/pjpeg";// Accept all image files//$acceptable_file_types = "image";// Accept ALL files$acceptable_file_types = "";// $default_extension used by upload() method// // If no extension is supplied, and the browser or PHP can not figure // out what type of file it is, you can add a default extension$default_extension = ""; // example: ".jpg"// $mode used by save_file() method//// Handles identically named uploaded files.//// OPTIONS://   1 = overwrite mode//   2 = create new with incremental extention//   3 = do nothing if exists, highest protection$mode = 2;		/***** UPLOAD LOGIC** --------------------------------------------------------------------***/	if (isset($_REQUEST['submitted'])) {		/* 			A simpler way of handling the submitted upload form			might look like this:						$my_uploader = new uploader('en'); // errors in English				$my_uploader->max_filesize(30000);			$my_uploader->max_image_size(800, 800);			$my_uploader->upload('userfile', 'image/gif', '.gif');			$my_uploader->save_file('uploads/', 2);						if ($my_uploader->error) {				print($my_uploader->error . "<br><br>\n");			} else {				print("Thanks for uploading " . $my_uploader->file['name'] . "<br><br>\n");			}		*/					// Create a new instance of the class		$my_uploader = new uploader('en'); // for error messages in french, try: uploader('fr');				// OPTIONAL: set the max filesize of uploadable files in bytes		$my_uploader->max_filesize(1500000);				// OPTIONAL: if you're uploading images, you can set the max pixel dimensions 		$my_uploader->max_image_size(50000, 50000); // max_image_size($width, $height)				// UPLOAD the file		if ($my_uploader->upload("userfile", $acceptable_file_types, $default_extension)) {			$my_uploader->save_file($path, $mode);		}				if ($my_uploader->error) {			echo $my_uploader->error . "<br><br>\n";				} else {			// Successful upload!			print($my_uploader->file['name'] . " was successfully uploaded! <a href=\"" . $_SERVER['PHP_SELF'] . "\">Try Again</a><br>");						// Print all the array details...			//print_r($my_uploader->file);						// ...or print the file			if(stristr($my_uploader->file['type'], "image")) {				echo "<img src=\"" . $path . $my_uploader->file['name'] . "\" border=\"0\" alt=\"\">";			} else {				$fp = fopen($path . $my_uploader->file['name'], "r");				while(!feof($fp)) {					$line = fgets($fp, 255);					echo $line;				}				if ($fp) { fclose($fp); }			} 		} 	}/***** HTML FORM** --------------------------------------------------------------------***/?><form enctype="multipart/form-data" action="upload.php" method="POST"><input type="hidden" name="submitted" value="true">	Upload this file:<br>	<input name="userfile" type="file">	<br><br>	<input type="submit" value="Send File"></form>EXAMPLE USAGE:--------------<?php	require_once('fileupload.class.php');			/* Create a new instance of the class	 * 	 * @examples:	$f = new uploader(); 		// English error messages	 *				$f = new uploader('fr');	// French error messages	 *				$f = new uploader('de');	// German error messages	 *				$f = new uploader('nl');	// Dutch error messages	 *				$f = new uploader('it');	// Italian error messages	 *				$f = new uploader('fi');	// Finnish error messages	 *				$f = new uploader('es');	// Spanish error messages	 *				$f = new uploader('no');	// Norwegian error messages	 *				$f = new uploader('da');	// Danish error messages	 */	$my_uploader = new uploader('en'); 			// Set the max filesize of uploadable files in bytes	$my_uploader->max_filesize(150000);			// For images, you can set the max pixel dimensions 	$my_uploader->max_image_size(100000, 100000); // ($width, $height)			// UPLOAD the file	$my_uploader->upload("userfile", "", ".jpg");			// MOVE THE FILE to its final destination	//	$mode = 1 ::	overwrite existing file	//	$mode = 2 ::	rename new file if a file	//	           		with the same name already 	//             		exists: file.txt becomes file_copy0.txt	//	$mode = 3 ::	do nothing if a file with the	//	           		same name already exists	$mode = 2;	$my_uploader->save_file("uploads/", $mode);			// Check if everything worked	if ($my_uploader->error) {		echo $my_uploader->error . "<br>";		} else {		// Successful upload!		print($my_uploader->file['name'] . " was successfully uploaded!<br><br>\n");				// If it's an image, let's display the file		if(stristr($my_uploader->file['type'], "image")) {			echo "<img src=\"uploads/" . $my_uploader->file['name'] . "\" border=\"0\" alt=\"\"><br><br>\n";		}		}?>	<hr><?php	if (isset($acceptable_file_types) && trim($acceptable_file_types)) {		print("This form only accepts <b>" . str_replace("|", " or ", $acceptable_file_types) . "</b> files\n");	}?></body></html>