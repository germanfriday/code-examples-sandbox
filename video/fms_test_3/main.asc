//+
// main.asc for sample_guestbook
//-

application.onAppStart = function ()
{
	trace ("*** sample_guestbook application start");

	application.entries_so = SharedObject.get("entries_so", true);
    
    // make sure client can't update the property
	application.entries_so.lock();


		// get the number of entries saved in the shared object and save it in application.lastEntry		
		var maxprop = 0;

		var soProperties = application.entries_so.getPropertyNames();

		trace("soProperties:" + soProperties);

		if (soProperties == null) {
			application.lastEntry = 0;
		} else {
			for (var prop in soProperties) {
				maxprop = Math.max ( parseInt(prop), maxprop);
				trace("maxprop " + maxprop);
			}
			application.lastEntry = maxprop+1;
		}

	application.entries_so.unlock();
    
    trace("*** onAppStart called.");
}


application.onConnect = function (clientObj)
{
	trace("*** onConnect called.");

	application.acceptConnection(clientObj);
}

application.onDisconnect = function (clientObj)
{
	trace("*** onDisconnect called.");
}

application.onAppStop = function (clientObj)
{
	trace("*** onAppStop called.");

	application.entries_so.flush();
}

Client.prototype.getEntryIndex = function()
{
    trace("*** returning free slot: " + application.lastEntry);
    return application.lastEntry++;
}

Client.prototype.delStream = function(streamName)
{
	trace("*** deleting stream: " + streamName);

	s = Stream.get(streamName);
	if (s) {
		s.onStatus = function(info) {
			if (info.code == "NetStream.Clear.Success")	{
				trace("*** Stream " + streamName + "deleted.");
			}
			if (info.code == "NetStream.Clear.Failure")	{
				trace("*** Failure to delete stream " + streamName);
			}
		};
		s.clear();
	}
}
