%!PS-Adobe-2.0 EPSF-1.2%%Title: Picture 2.pdf (Converted)-4%%Creator: FreeHand 10.0%%CreationDate: 7/10/03 10:50 AM%%BoundingBox: 0 0 81 129%%FHPathName:Macintosh HD:Applications:Macromedia FreeHand MX:FreeHand MX.app:Contents:MacOS:Picture 2.pdf (Converted)-4%ALDOriginalFile:Macintosh HD:Applications:Macromedia FreeHand MX:FreeHand MX.app:Contents:MacOS:Picture 2.pdf (Converted)-4%ALDBoundingBox: -16363 -31867 15893 389%%FHPageNum:0%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%EndComments%%BeginAGDEmbeddedDoc: version 1.0%:s8W,W5t==$^::es!!!=tGQG3SCM[7p'gDNaqQ\=,_=f3q8uhL*%:s8V\eQIr1'!e/,7oqT&DNC05Q`]1As#;jfH?CW>-?*dkh1$QTpJW^Z",--t?<WDh)8q*Ei^JKAZks+r?2+=X+W@C?2aA.Yn'VQq^g[CZCGPBrs=%]<4<qh&!o?B::k02VK1J8c=U#U6`&sT4P&UDH_P=.%oU5Y>[iT7@c>f+C!#:N.uR\2Ip4SYmda[$Fe7*]<[HrN\p5Yk>BE>Et7THT5@RSokY277OjCoX63/M!W*Ph`LkH]-WU%:-bZIM%\qlt5"&u'nL+`%>]SCtS;#*telJa.S>Al(V:*@>lSBX"p^31M#"GY+-d-O2/#&R_q=.G*%iJF[rKa5>LYaTsTISYfgVal3SA[eMIgLBa$K8*:f.V&sd[mF,a>oBP]:(?,'I!4VIQ<`n;KbH<V5P6M&Yb:Gaga'is.b_!mR>TR)kqEJo4hr"K#4I384BI*]`2%C;(G-NjrK'B#.*HU23?!=@;<g&FVKZ:Gn]EJh_nnX?]F-<%:0&^fE/3$S,W&n>BH8el-AFsc@npg(f^CN.!(MiTgY=++XB+_\ocP9bHV%?YmC>oB,of?^Nh-j5S-B>7!;V:cT65Wj-s4l<XDt;ks*?U<?h>G5UAtsJ/enXY&7WpQ5N0:L,k'a2^@SaS7eFDLFE/\#`E_[>5nT!YN*R.$c=H"eSa`OhKdTW0@IjHYb96G4f/@*L*'H:1(*[GQ<ePnoD'Vt-'!ui>#jFagij+%Yl>s(/!,Km?0ng%iI%:=]/9,*:o7?V'D(h_L[le0bT+J&)D00<bkJs<cVjVo\cK+$+V=1BpqQ&?@%9=C`ehl.;-f/g_4^EV5.H/m86X"bP@ZKMkUXV95"TOENterCaAj+F&mde"Z`_$No7%&]Z3@GRi:K`'P:YtpDggWLrL4iR7AV<fthbcSH0sjn_9[%USSurDgs)YkMq_dSM/HEoT7KFmq(bJ!5-BCq@ma?diA9H8Il1>S^>tVc$#Z1=m,4P[oW.Piq[9(%:-6nZKVe+R4>-TMCCHM+Pk`X)8f%LG4?)@l-[TKL6R0X8#U3K^a\cUGe(A,Ia+(f'o!QZPKAX9p(4Y2.P+8*fcCh^Q6Oa[Hlm=Wbed>ursm!9q\Aj9m$-/SJ+o5h^pILuM23g>KGS5)b:Af$X#iRfslBKWaf)TLQCBGtrW6qPYd6$eb*iRH\7GN%.=X]RBMe:V*TT:=!dSjcCd2ZLH2QI3#Dq"_KVPob!KpGf7T5+%q/RuXDP.l+aq%:K6+BPo^oCVI"'X_/8ti?b9kZ:/=J!(99nc&Ub(*pBR"YAP0n5F=BKW.F)I`I_M@[#&WP.7C-h@a'_5@gq)LmXguWCU0ieKRkbtF`j/onVTH"5p^8S%7FeT.q.Q<[Z`]uNreEt"W">s)16<u9O)`S/HM4ccp4slMS6:F?%`a'rIok-&JSt.>t:i%"J3XSl$g^]Xl\Eq:sWq%m@UH#9rCMZD+EZe;GOCCgL7<sl^691.,l;(',>AJL;%:dSNeIj$Q@;J*K:r6<0jKBrEG`E<B)^=D1(!_Gt/FV4jWr`d<dS6ct-W[6TVM1fT^k\1X!JRHfOiRF4o/Q,^5Q<_s9:$@;iQ1*%t3C>Ggb2RF0)XW%k+2H3YdE>_YjL(0Pcgo*NhLlN7Y&ihM-%@LtfW&7U";&pBO@k@(/$d+#oF[:m6%5$l#^lq+<OJuN0Nu2,uTq\:$;V_XU%V2RX;G6eN2,k8R*p`mWr"0[*.6jVo#>XQ_6<ha=%:W2T&%IRs#.@3TWHAo_%B4H>i?EQ=Ai$lcH4:6%EEXG?"mCfs-6/aEH*3o%/U/FVDu,?)j:>6T.G7uLP31*`"m/VRHKMJ^GaY(,jtQ4C(`W2Pf_*<$)*".?1gBK)ko3[uUiXA$lhEZe;08?GQsFAu5\\3)SMb(363moNL-.]V?-$&6gFJY;4biAFFnMGU6Oj/n=V:eh/d%k(mZ8!CN4<)Ifq'lk$>[%gH5`^Y<IQsiK&=$<L</(7G/%:(iMcWa>`FihdYe-A?)qP'if]''t%Y$p^"<;bd%\GWX5c$b-.S7er1R3X!ZaiVF$BU;.$#lU=P:t+;KKm%@IPjMQ8R5e=(Bjs&Dl*A?#f2fDAq+;,M,K[E_Q53KU4X86tQZMiJQq[5B7p%@LtN3ohb"R;*FN7Rs>#W)m29FL8!35eBiNA1HBCC9.QLFMnCB`kuMY7WI>\)W>-u.`-KE3Bpt35L\P_,"$C,bn8]X'@@;.65>:lm3OR1%:Q%n0=qWU75HO:^Oh[olIckrM/Za^$UFBC^B5F[q";:ORdPphi7+Cg4LV^9dQ5F]gB)E4k82FRHW^n$B^+H-S(V%2:uG+h^@B+I-m<-qQDh6hGDK4Yf:XAOt0Lh1eEM>Ap:(7@ZDrUFqoS9s_>%udMj2`PF/Ua^N-`2m*khCN"JF9g^]HX6+WB'BZL*IO3F`V\8Cg*ufD;f9jE;cZfcQ7;?JQIu0j7VtT:cd9/b3JkV^itgp=D0ZF#%:_GA)(Kr@-8+)TPU4c!c/KjPg+b=^i1l$XTbp_h/BIo#'a4+rtZM0gi#@mOnQZt'Hj*8Tb@.l`bb9K%"6<FtW;Ii1oWr0;t@mejU+RQfU(V`b=GM4W#K&q'Z;44J7a+YV#D&l64d\jMn6)n7)5L`O:=NNY`^JnZLR`Mt'T;(N0G1p/D$-CMg#.YYM&UH3^OT#Li%`kZ3MKtOW@Bp<3A^uP8O8)M<\5)H[S1)$.74)P5q45+m$2ud!D%:nm+m[5+^pEkM>D"k^:QmI"#`]0c?T(JP'fiH$tg(5VI24R?m(`al./<kZgH'-YBn%Dt<GS!=*p!9Rl+]Tb\k)fZboQjaHbW6(Tg,:fP4N3XTta?D-b\NibbXWHIJ9?(gcmVn;p.>@?i\fYm;JC,.q:RWq]2XePft[e>)`kj>jG3]_V7mH+>]LonbSiAMO4c":tYieuCO6nBd%0cCjo$hN+hr#kE4EW.0_laOSidb!%hl0[a&]tR8(%:lfd\LDs6ELlg/BPO*%f(G4g$d@oZpMc6lL7R=ljh3W;C6s!9WpYL!gE<OtF[U=\TQ]hUfSGo]OOC\-ifS[<m/IU`;!JR'Pq0/c*B%W;7BX\o2Un@ZfqE<s/cpW>d'/"ZY-E#HdJK%GJ*=81iMMd3,<<3n0t*r\*B,S<';-3AAkP=B8&ART%aAH2d&6t(1K<,$2\!!1SM6tp.Q!!1GH;fm%oDJ&qNF[:+kEbT!*FCe!]Ch.*tr#8N1%:!!+cMATDj2ARfgrG%F0aBk.2E##0&4@VTIaF8u=:9iH.SBl7P`!:W]VBle@r!:*?IBk)5b!/<s66uQR+ART+\EW?/;6?73iBM<,]F8uA.;gE4hDer*]@WGmtGlRhm7;QOPASuSi!'!;]De!P_!S:@HE)0qX!!774Ea`p#Bk((`H#.$l!N&h)@T6cFCh3SIA5I;bE(k=p!!-J(Ec5H!A9Dp(!!!Ho7mogbDKGjY9LE`7DfR`97&%-^%:!7"8PDIlXQF8u<n9PJQi!!)Ub:18!N!!"Z=@<6-m7VQ[T!!"]>@<6-m9PJBU!!%:5Ch7HWBle@r!0BZaB6A6+!!7@3Df0Z.DKJ?^Chs(OY=E_LA7]f^!L-N)H#.%gEc5njF*%B_OAg+:F@0t_DfR`9!D?6tFD(XS`(XTbAT@bN8jdN5Ch7*uDfPgXWCLuIF`7<\-UDcnDg,#dFD(XS!!&/_ciK4/ciK4/ciK4.fDs1sc2c,i[L[aY%:c2c,ic2c,ic2c,ic2cJs-NGLo-NGLo-NGLo-NMd"ciK4/ciK4/ciK4/ciK4/ciK4.fDtC@o)MGcF9(e2ciCuan,Q,`F9(e1_uT9,9EK;9n,d\3Y5n%mciCuan,Q,`F96XfFTCn4F9!urFTCn2o)[2>F90_g9E6^IFTCn2o)S7[o)S@_ciS:i9)qWc0*67rn,d\49*"G]W;uDf_uSEjciEY<V>r7Mci=LUciM`!PQ3B=FTCn38BgGH%:ciS:hfE-0qn,d\3fE!Z+n,c,^5lsjaFTCn4F9"9#o)S7]F9&KGFTCn2o)a"6n,TEgf)Y:?o)SRdo)SRdo)SRdo)[2=A,u3$n,S24CghEs6tKkHA7Yc@s8W*!WjiDZ%:~>%%EndAGDEmbeddedDoc%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{dup where not{AltsysSepDict}if 3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{/cntr 0 def2 copy readstring{{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop}ifcntr 0 gt{pop 2 copydup length cntr sub cntr getintervalreadbinarystring} ifpop exch pop} bdf/_NXLevel2 defed { _NXLevel2 not { /colorimage where {userdict eq {/_rci false def } if} if} if} if/md defed{ md type /dicttype eq { /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if}if }if/setstrokeadjust defed{true setstrokeadjust/C{curveto}bdf/L{lineto}bdf/m{moveto}bdf}{/dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/setstrokeadjust{pop}bdf }ifelse/privrectpath { 4 -2 roll mdtransform round exch round exch idtransform 2 copy 0 lt exch 0 lt xor{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}ifelseclosepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed {/_bfh {/_fonthacksave currentpacking def false setpacking} bdf/_efh {_fonthacksave setpacking} bdf}{/_bfh {} bdf/_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` { false setoverprint /-save0- save def5 index concatpopstorerect left bottom width height rectclippop/MMdict_count countdictstack def/MMop_count count 1 sub defuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath} bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1 statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelseend def/printerRes gsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/graycalcs[{Angle Frequency} {GrayAngle GrayFrequency} {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps {forcemaxsteps{maxsteps}{/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelseprinterRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if }ifelse} bdf/nextrelease defed { /languagelevel defed not { /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if}if}iffhnumcolors 1 ne {/calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {currentpagedevice /PreRenderingEnhance known{currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if} if} if/gradfrequency 144 defprinterRes 1000 lt {/gradfrequency 72 def} if/adjnumsteps {dup dtransform abs exch abs max printerRes div gradfrequency mul round 5 max min }bdf/goodsep {spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted? 0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{systemdict /packedarray known {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{ /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{ /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/i{dup 0 eq{pop df dup} {dup} ifelse /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{ {/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{/NF exch def { exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length /Len exch def dup length Len add string dup Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{ dup FontDirectory exch known {pop 3 -1 roll pop} {RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf/RCJ{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFJ{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCJ} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFJ{dup hasfont not { pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse }if}bdf/FFJ{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get dup length 256 eq{256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }{7 -1 roll pop pop pop pop pop findfont}ifelse}ifelse_efh}bdf/GS {dup hasfont {findfontexch makesetfontexchpopts}{pop pop popts} ifelse} bdf/RCK{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFK{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCK} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFK{dup hasfont not { pop/JCsmhasfont {/JCsm}{/Courier}ifelse }if}bdf/FFK{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCTC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFTC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCTC} ifelse}bdf/FDFTC{dup hasfont not { pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse }if}bdf/FFTC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCSC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFSC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFSC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCSC} ifelse}bdf/FDFSC{dup hasfont not { pop/zh-gbscript-1.11hasfont {/zh-gbscript-1.11}{/Courier}ifelse }if}bdf/FFSC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFSC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/fps{currentflat exch dup 0 le{pop 1}if {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse}loop pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont {/Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 muladd add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor { max max max } ndf/maxspot {pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{0 1 2 index length 1 sub{ 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put}for4 1 roll pop pop pop}bdf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image}ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{aload pop (_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage}ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage}ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor { spots exch getdup 4 get (_vc_Registration) eq{pop 1 exch sub setseparationgray}{0 5 getinterval exch setcustomcolor}ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdfuserdict /islevel2systemdict /languagelevel known dup{pop systemdict /languagelevel get 2 ge} ifputislevel2 not{/currentcmykcolor{0 0 0 1 currentgray sub} ndf} if/tc{gsavesetcmykcolor currentcmykcolorgrestore} bind def/testCMYKColorThrough{tc add add add 0 ne} bind def/fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput}{ pop }ifelse/bc4 [0 0 0 0] def /_lfp4 {1 pop /yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdfc1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round height abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/bcs [0 0] def /_lfs4 {/yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/tint2 xdf /tint1 xdf bcs exch 1 exch put tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round height abs adjnumsteps dup 2 lt {pop 2} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfs6 {/tint2 xdf /tint1 xdf bcs exch 1 exch put /inrad xdf /radius xdf /yt xdf /xt xdf tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfp6 {1 pop /k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdf/inrad xdf /radius xdf /yt xdf /xt xdf c1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{AltsysDict /cvc 2 index put aload length dup 4 eq{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}{6 eq {sethexcolor} {setspotcolor} ifelse }ifelse}bdf 0 setseparationgray/imgr {-16128 -16128 16128 16128 } def /bleed 0 def /clpr {-16128 -16128 -144 -144 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def userdict begin /AGDOrigMtx matrix currentmatrix def end vms-235 -15739 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor]defn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1]vcvms260.1683 15779.2279 m260.1683 15771.1029 L252.0588 15771.1029 L252.0587 15763.1028 L243.9279 15763.1028 L243.9279 15755.2279 L235.9816 15755.2279 L235.9816 15763.1028 L235.875 15867.4703 L252.0587 15867.4703 L252.0588 15859.0861 L260.0587 15859.0861 L260.0587 15851.2111 L268.0587 15851.2111 L268.0587 15843.2111 L275.9337 15843.2111 L275.9337 15835.2111 L284.0587 15835.2111 L284.0587 15827.2111 L292.0587 15827.2111 L292.0587 15819.2111 L300.0587 15819.2111 L300.0587 15811.2111 L308.0587 15811.2111 L308.0588 15803.2112 L316 15803.2111 L316 15795.1028 L308.0588 15795.1028 L308.0587 15787.1028 L291.9183 15787.1028 L291.9183 15779.212 L299.9183 15779.2121 L299.9183 15763.1307 L307.9183 15763.1307 L307.9183 15739.2279 L283.9816 15739.2279 L283.9816 15747.1029 L275.9816 15747.1029 L275.9816 15763.2279 L267.9816 15763.2279 L267.9816 15779.2279 L260.1683 15779.2279 L[0 0 0 0]vcf n292.183 15763.1846 m299.933 15763.1846 L299.933 15747.3025 L292.183 15747.3025 L283.9887 15747.2692 L283.9887 15763.1442 L275.8637 15763.1442 L275.8637 15779.4041 L267.8637 15779.4041 L267.8637 15787.2791 L260.1137 15787.2791 L260.1138 15779.0864 L252.308 15779.0863 L252.308 15771.1939 L244.1138 15771.1939 L244.1138 15859.3189 L252.308 15859.3189 L252.308 15851.1884 L260.1138 15851.1883 L260.1137 15843.1212 L268.183 15843.1213 L268.183 15835.2462 L276.058 15835.2463 L276.058 15827.1212 L284.058 15827.1212 L284.058 15819.1212 L292.058 15819.1212 L292.058 15811.2247 L300.058 15811.2247 L300.058 15803.1989 L308.058 15803.1988 L308.058 15795.1775 L299.8637 15795.1775 L291.8637 15795.1775 L284.058 15795.1775 L284.058 15779.0554 L292.183 15779.0555 L292.183 15763.1846 L[0.6941 0.5765 0.5765 0.949]vcf nvmrvmrend%%Trailer